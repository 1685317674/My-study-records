#2015年11月18日
##JavaScript

offsetLeft:综合考虑 所有因素,获取物体的左边距.
obj.offsetLeft 指 obj 相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置.
如果当前元素的父级元素中有CSS定位（position为absolute或relative），offsetParent取最近的那个父级元素。

offsetWidth = width + padding + border

offsetHeight = height + padding + border


width是字符串;offsetWidth是数字;
style.left是**读写**的，offsetLeft是**只读**的，所以要改变div的位置，只能修改style.left。

###DOM

`childNodes`:子节点,包括文本节点与元素节点.

`nodeType`:文本节点的类型;
>1:元素节点;3:文本节点;

`children`:非标准属性；

`parentNode`:父节点;

`offsetParent`:获取元素用来定位的父级`

`firstElementChild`:第一个元素节点;

`firstChild`:低版本指元素节点,高版本浏览器指文本节点;

>`lastChild1`与`lastElementChild`,`nextSibling`与`nextElementSibling`,`previousSibling`与`previousElementSibling`;

**元素属性操作**

 - oDiv.style.display="block";
 - oDiv.style.["display"]="block";
 - DOM方式

DOM方式操作元素属性

  - 获取:getAttribute(名称)
  - 设置:setAttribute(名称,值)
  - 删除:removeAttribute(名称)

```js
alert(oTxt.getAttribute("value"))

oTxt.setAttribute("value","hello world");

oTxt.removeAttribute("value");
```


**获取指定class元素**

```js
function getByClass(oParent,sClass){
    var aResult=[];
    var aEle=oParent.getElementsByTagName("*");
    for(var i=0;i<aEle.length;i++){
        if(aEle[i].className==sClass){
            aResult.push(aEle[i]);
        }
    }
    return aResult;
}
```
