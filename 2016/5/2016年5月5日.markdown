[TOC]#2016年5月5日##javascript - **window.open**语法：    window = object.open([URL ][, name ][, features ][, replace])  - URL：新窗口的URL地址  - name：新窗口的名称，可以为空  - featurse：属性控制字符串，在此控制窗口的各种属性，属性之间以逗号隔开。  - fullscreen= { yes/no/1/0 } 是否全屏，默认no  - channelmode= { yes/no/1/0 } 是否显示频道栏，默认no  - toolbar= { yes/no/1/0 } 是否显示工具条，默认no  - location= { yes/no/1/0 } 是否显示地址栏，默认no  - directories = { yes/no/1/0 } 是否显示转向按钮，默认no  - status= { yes/no/1/0 } 是否显示窗口状态条，默认no  - menubar= { yes/no/1/0 } 是否显示菜单，默认no  - scrollbars= { yes/no/1/0 } 是否显示滚动条，默认yes  - resizable= { yes/no/1/0 } 是否窗口可调整大小，默认no  - width=number 窗口宽度（像素单位）  - height=number 窗口高度（像素单位）  - top=number 窗口离屏幕顶部距离（像素单位）  - left=number 窗口离屏幕左边距离（像素单位）###数组操作 - shift()，unshift()shift方法用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组。```jsvar a = ['a', 'b', 'c'];a.shift() // 'a'a // ['b', 'c']```unshift方法用于在数组的第一个位置添加元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组。```jsvar a = ['a', 'b', 'c'];a.unshift('x'); // 4a // ['x', 'a', 'b', 'c']``` - reverse()reverse方法用于颠倒数组中元素的顺序，使用这个方法以后，返回改变后的原数组。```jsvar a = ['a', 'b', 'c'];a.reverse() // ["c", "b", "a"] a // ["c", "b", "a"]    ``` - slice()slice方法用于提取原数组的一部分，返回一个新数组，原数组不变。它的第一个参数为起始位置（从0开始），第二个参数为终止位置（但该位置的元素本身不包括在内）。```js// 格式arr.slice(start_index, upto_index);// 用法var a = ['a', 'b', 'c'];a.slice(0) // ["a", "b", "c"]a.slice(1) // ["b", "c"]a.slice(1, 2) // ["b"]a.slice(2, 6) // ["c"]``` - splice()splice的第一个参数是删除的起始位置，第二个参数是被删除的元素个数。如果后面还有更多的参数，则表示这些就是要被插入数组的新元素。```javascript// 格式arr.splice(index, count_to_remove, addElement1, addElement2, ...);// 用法var a = ['a', 'b', 'c', 'd', 'e', 'f'];a.splice(4, 2) // ["e", "f"]a // ["a", "b", "c", "d"]``` - sort()sort方法对数组成员进行排序，默认是按照字典顺序排序。排序后，原数组将被改变。```javascript['d', 'c', 'b', 'a'].sort()// ['a', 'b', 'c', 'd'][4, 3, 2, 1].sort()// [1, 2, 3, 4][11, 101].sort()// [101, 11][10111,1101,111].sort()// [10111, 1101, 111]```