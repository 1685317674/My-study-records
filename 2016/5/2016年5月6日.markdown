[TOC]#2016年5月6日##javascript###Date对象**Date对象的静态方法：** - Date.now()Date.now方法返回当前距离1970年1月1日 00:00:00 UTC的毫秒数**window.performance.now()**提供页面加载到命令运行时的已经过去的时间，可以精确到千分之一毫秒。 - Date.parse()Date.parse方法用来解析日期字符串，返回距离1970年1月1日 00:00:00的毫秒数。    Date.parse('Aug 9, 1995')    // 返回807897600000，以下省略返回值 - Date.UTC()Date.UTC方法可以返回UTC时间（世界标准时间）。```js// 格式Date.UTC(year, month[, date[, hrs[, min[, sec[, ms]]]]])// 用法Date.UTC(2011, 0, 1, 2, 3, 4, 567)// 1293847384567```**Date的实例对象分为以下三类:** - to类：从Date对象返回一个字符串，表示指定的时间。 - get类：获取Date对象的日期和时间。 - set类：设置Date对象的日期和时间。**to类方法** - Date.prototype.toString()toString方法返回一个完整的日期字符串。```jsvar d = new Date(2013, 0, 1);d.toString()// "Tue Jan 01 2013 00:00:00 GMT+0800 (CST)"d// "Tue Jan 01 2013 00:00:00 GMT+0800 (CST)"``` - Date.prototype.toUTCString()toUTCString方法返回对应的UTC时间，也就是比北京时间晚8个小时。```jsvar d = new Date(2013, 0, 1);d.toUTCString()// "Mon, 31 Dec 2012 16:00:00 GMT"d.toString()// "Tue Jan 01 2013 00:00:00 GMT+0800 (CST)"``` - Date.prototype.toISOString()toISOString方法返回对应时间的ISO8601写法。```jsvar d = new Date(2013, 0, 1);d.toString()// "Tue Jan 01 2013 00:00:00 GMT+0800 (CST)"d.toISOString()// "2012-12-31T16:00:00.000Z"``` - Date.prototype.toJSON()toJSON方法返回一个符合JSON格式的ISO格式的日期字符串，与toISOString方法的返回结果完全相同。```jsvar d = new Date(2013, 0, 1);d.toJSON()// "2012-12-31T16:00:00.000Z"d.toISOString()// "2012-12-31T16:00:00.000Z"```